Задание 1 -------------------------------------------------------------------------------------------------

Создание типизированного объекта

1. Создайте объект 'car', который будет описывать машину.

2. Объект должен содержать следующие свойства:
   - 'brand* (строка)
   - 'model' (строка)
   - 'year' (число)
   - 'isElectric' (булево значение)

3. Затем напишите функцию 'describeCar', которая принимает этот объект в качестве параметра и возвращает строку с описанием машины в следующем формате: "Brand Model (Year), Electric: Yes/No".

Создать новый проект:
npm -y init
npm install -D typescript ts-node
npx tsc --init

Запустить код:
node task-1.js

Запустить код (в режиме разработки): 
npx ts-node task-1.ts

Задание 2 -------------------------------------------------------------------------------------------------

Типизация массива с числами

1. Создайте массив чисел `scores`, представляющий результаты тестов студентов.

2. Напишите функцию `averageScore`, которая принимает этот массив и возвращает средний балл.

Задание 3 -------------------------------------------------------------------------------------------------

Использование кортежей

1. Создайте кортеж 'personinfo', который содержит имя (строка) и возраст (число).

2. Затем напишите функцию `printPersoninfo`, которая принимает этот кортеж как параметр и выводит его элементы в консоль.

Задание 4 -------------------------------------------------------------------------------------------------

Массив объектов

1. Создайте массив объектов 'products', где каждый объект описывает товар и содержит следующие свойства: `name` (строка), `price` (число), и `inStock` (булево значение).

2. Напишите функцию `listAvailableProducts`, которая принимает этот массив и выводит названия товаров, которые есть в наличии.

Задание 5 -------------------------------------------------------------------------------------------------

Обработка неизвестного типа

1. Создайте переменную `data` типа `unknown`, которая может принимать значения разных типов.

2. Напишите функцию `processData`, которая принимает эту переменную и проверяет ее тип.

3. Если это строка, функция должна вернуть её длину.

4. Если это число, функция должна вернуть его квадрат. В любом другом случае функция должна вернуть `null`.

Задание 6 -------------------------------------------------------------------------------------------------

Функция с типом `void` и `never`

1. Напишите функцию `logMessage`, которая принимает строку `message` и выводит её в консоль, не возвращая никакого значения (используйте тип void').

2. Затем напишите функцию `throwError`, которая принимает строку errorMessage , выбрасывает исключение с этим сообщением и имеет тип `never`.
