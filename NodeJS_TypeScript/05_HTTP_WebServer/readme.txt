Задача 1

Импортируйте модуль `http`.
Создайте сервер с использованием метода `http.createServer()`. Этот метод принимает функцию обратного вызова, которая будет вызвана при каждом запросе к серверу.
В функции обратного вызова установите статус ответа. Для успешного ответа используйте статус код `200`.
Установите заголовок ответа `Content-Type`, который определяет тип содержимого. Для простого текстового ответа используйте значение `text/plain`.
Отправьте ответ с текстом `Hello, World!` и завершите обработку запроса.
Настройте сервер на прослушивание определенного порта. В данном случае используйте порт `3000`.
Добавьте сообщение в консоль, которое будет выводиться при успешном запуске сервера. Убедитесь, что оно включает адрес и порт, на котором работает сервер.

Задача 2

Импортируйте модуль `http`.
Создайте сервер с использованием метода `http.createServer()`. 
В функции обратного вызова проверьте URL запроса, используя свойство `req.url`.
В зависимости от значения URL, отправьте различный текст в ответе.
Если URL равен `/`, отправьте текст "Главная страница".
Если URL равен `/about`, отправьте текст "О нас".
Если URL равен `/contact`, отправьте текст "Контакты".
Для всех остальных URL отправьте текст "Страница не найдена" и установите статус ответа `404`.
Установите заголовок ответа `Content-Type` в `text/plain` для всех ответов.
Настройте сервер на прослушивание определенного порта, например, `3000`.
Добавьте сообщение в консоль, которое будет выводиться при успешном запуске сервера.

Задача 3 

Импортируйте модуль `http`.
Создайте сервер с использованием метода `http.createServer()`. Этот метод принимает функцию обратного вызова, которая будет вызвана при каждом запросе к серверу.
В функции обратного вызова установите статус ответа `200` и заголовок `Content-Type` в `text/plain` по умолчанию.
Проверьте метод запроса, используя свойство `req.method`.
Если метод запроса `GET`:
Проверьте значение URL запроса:
Если URL равен `/`, отправьте текст "Добро пожаловать на главную страницу!".
Если URL равен `/about`, отправьте текст "Это страница о нас.".
Если URL равен `/contact`, отправьте текст "Это страница контактов.".
Для всех остальных URL отправьте текст "Страница не найдена" и установите статус ответа `404`.
Если метод запроса `POST`:
Проверьте значение URL запроса:
Если URL равен `/submit`, отправьте текст "Форма отправлена!".
Для всех остальных URL отправьте текст "Страница не найдена" и установите статус ответа `404`.
Если метод запроса отличается от `GET` и `POST`, установите статус ответа `405` и отправьте текст "Метод не разрешен".
Настройте сервер на прослушивание определенного порта, например, `3000`.
Добавьте сообщение в консоль, которое будет выводиться при успешном запуске сервера.

Задача 4

Создание сервера:
Импортируйте модуль `http`.
Создайте сервер с использованием метода `http.createServer()`.

Настройка заголовков CORS:
В функции обратного вызова для сервера установите заголовок `Access-Control-Allow-Origin` со значением `*`, чтобы разрешить доступ с любого домена.
Установите заголовок `Access-Control-Allow-Methods` со значением `GET, POST, PUT, DELETE`.
Установите заголовок `Access-Control-Allow-Headers` со значением `Content-Type`.

Формирование ответа:
Установите статус ответа `200`.
Установите заголовок `Content-Type` в `application/json`.
Отправьте JSON-ответ с сообщением "CORS enabled".

Запуск сервера:
Настройте сервер на прослушивание порта `3000`.
Добавьте сообщение в консоль, которое будет выводиться при успешном запуске сервера.

Зачада 5 

Создание сервера:
Импортируйте модуль `http`.
Создайте сервер с использованием метода `http.createServer()`.
Чтение заголовка Authorization:
В функции обратного вызова для сервера прочитайте заголовок `Authorization` из объекта запроса (`req.headers['authorization']`).
Логируйте значение заголовка `Authorization` в консоль.
Настройка заголовка Cache-Control:
Установите статус ответа `200`.
Установите заголовок `Content-Type` в `text/plain`.
Установите заголовок `Cache-Control` со значением `public, max-age=3600` для кэширования ресурса на 1 час.
Отправка ответа:
Отправьте текстовый ответ с сообщением "Authorization header logged, and Cache-Control header set".
Запуск сервера:
Настройте сервер на прослушивание порта `3000`.
Добавьте сообщение в консоль, которое будет выводиться при успешном запуске сервера.
